version: 0.6.0.{build}

# fetch repository as zip archive
shallow_clone: true

notifications:
- provider: Email
  to:
  - silx-ci@edna-site.org
  subject: '[CI] appveyor'
  on_build_success: false
  on_build_failure: false
  on_build_status_changed: true

os:
    - Visual Studio 2015

cache:
    - '%LOCALAPPDATA%\pip\Cache'

environment:
    global:
        WIN_SDK_ROOT: "C:\\Program Files\\Microsoft SDKs\\Windows"
        VENV_BUILD_DIR: "venv_build"
        VENV_TEST_DIR: "venv_test"

    matrix:
        # Python 3.6
        - PYTHON_DIR: "C:\\Python36-x64"
          QT_BINDINGS: "PyQt5"
  
        # Python 3.5
        - PYTHON_DIR: "C:\\Python35-x64"
          QT_BINDINGS: "PyQt5"

        # Python 2.7
        - PYTHON_DIR: "C:\\Python27-x64"
          QT_BINDINGS: "PyQt4"

        - PYTHON_DIR: "C:\\Python27-x64"
          QT_BINDINGS: "PySide"

install:
    # Add Python to PATH
    - "SET PATH=%PYTHON_DIR%;%PYTHON_DIR%\\Scripts;%PATH%"

    # Upgrade/install distribution modules
    - "pip install --upgrade setuptools"
    - "python -m pip install --upgrade pip"

    # Install virtualenv
    - "pip install --upgrade virtualenv"
    - "virtualenv --version"

build_script:
    # Create build virtualenv
    - "virtualenv --clear %VENV_BUILD_DIR%"
    - "%VENV_BUILD_DIR%\\Scripts\\activate.bat"

    # Install build dependencies
    - "pip install --upgrade wheel"
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ --upgrade numpy"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"

    # Build
    - "python setup.py bdist_wheel bdist_msi"
    - ps: "ls dist"

    # Leave build virtualenv
    - "%VENV_BUILD_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_BUILD_DIR% /s /q"

test_script:
    # Create test virtualenv
    - "virtualenv --clear %VENV_TEST_DIR%"
    - "%VENV_TEST_DIR%\\Scripts\\activate.bat"

    # Install numpy
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ --upgrade numpy"

    # Install Qt binding and matplotlib
    # Install PyQt4 from www.silx.org and PyQt5/PySide from pypi
    - "pip install --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ %QT_BINDINGS%"
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ matplotlib"

    # Install h5py for silx.io tests
    - "pip install --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ h5py"

    # Install fabio
    - "pip install --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ fabio"

    # Install scipy for silx.image.sift tests
    - "pip install --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ scipy"

    # Install IPython and qtconsole for silx.gui.console tests
    - "pip install ipython"
    - "pip install qtconsole"

    # Install the generated wheel package to test it
    # Make sure silx does not come from cache or pypi
    # At this point all install_requires dependencies MUST be installed
    # as this is installing only from dist/
    - "pip install --pre --find-links dist/ --no-cache-dir --no-index silx"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"

    - "python run_tests.py -v"
    - "python test.py"

    # Leave test virtualenv
    - "%VENV_TEST_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_TEST_DIR% /s /q"

artifacts:
    # Archive the generated wheel package in the ci.appveyor.com build report.
    - path: dist\*
