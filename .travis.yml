language: python

git:
    depth: 1

matrix:
    include:
        - python: 2.7
          os: linux
          env:
              - BUILD_COMMAND=sdist
              - WITH_QT_TEST=False

        - python: 3.4
          os: linux
          env:
              - BUILD_COMMAND=sdist
              - WITH_QT_TEST=False

        - python: 3.5
          os: linux
          env:
              - BUILD_COMMAND=sdist
              - WITH_QT_TEST=True
              - QT_BINDINGS=PyQt5

        - language: generic
          os: osx
          env:
              - BUILD_COMMAND=bdist_wheel
              - WITH_QT_TEST=False

cache:
    apt: true

addons:
    apt:
        packages:
            - libhdf5-serial-1.8.4
            - libhdf5-serial-dev
            - libegl1-mesa  # Required by Qt xcb platform plugin
            - libboost-python-dev # for PyOpenCL
            - opencl-headers

before_install:
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then . ./ci/before_install-linux.sh; fi"
#  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'osx' ]; then . ./ci/travis/before_install-osx.sh; fi"

install:
    # Mac OS X specific bootstrap
    - source ./ci/travis_osx.sh
    - travis_osx_install_begin

    # Upgrade distribution modules
    - pip install --upgrade setuptools
    - python -m pip install --upgrade pip

    # Install build dependencies
    - pip install --upgrade wheel

    #TODO: cleanup after https://github.com/h5py/h5py/issues/731 is fixed 
    - pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ numpy --upgrade
    - pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ h5py --no-index
    # Print Python info
    - python ./ci/info_platform.py
    - pip list
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; 
      then 
          dpkg -l;
          ldd $(python -c "import h5py;print(h5py.h5d.__file__)");
      fi

    # Generate source package or wheel
    - python setup.py $BUILD_COMMAND
    - ls dist

    # Mac OS X specific cleanup
    - travis_osx_install_end

before_script:
    # Start X Virtual Framebuffer useful for GUI testing
    # Doc: https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI
    - if [ "$TRAVIS_OS_NAME" == "linux" ];
      then
          export DISPLAY=:99.0;
          sh -e /etc/init.d/xvfb start;
          sleep 3;
      fi

script:
    # Mac OS X specific bootstrap
    - travis_osx_run_begin

    # Upgrade distribution modules
    - pip install --upgrade setuptools
    - python -m pip install --upgrade pip

    # Install numpy
    - pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ numpy --upgrade

    # Install h5py for silx.io tests
    - pip install --pre --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ h5py

    #Install optional dependencies for running test
    - pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ scipy 
    - pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ pyopencl==2015.1
    - pip install mako 

    # Install GUI dependencies
    - if [ "$WITH_QT_TEST" == "True" ];
      then
          pip install --pre matplotlib "$QT_BINDINGS" ipython qtconsole;
      fi

    # Install built package
    # Make sure silx does not come from cache or pypi
    # At this point all install_requires dependencies MUST be installed
    # as this is installing only from dist
    - pip install --pre --find-links dist/ --no-cache-dir --no-index silx

    # Print Python info
    - python ci/info_platform.py
    - pip list

    # Run the tests using WITH_QT_TEST from the environment
    - echo "WITH_QT_TEST="$WITH_QT_TEST
    - if [ ${TRAVIS_OS_NAME} = 'osx' ]; 
        then
        export SILX_TEST_LOW_MEM=True;
        fi
    - python run_tests.py -m

    # Mac OS X specific cleanup
    - travis_osx_run_end
